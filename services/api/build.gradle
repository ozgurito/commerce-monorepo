plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.10'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.commerce'
version = '0.0.1-SNAPSHOT'
description = 'Backend service for multi-vendor e-commerce SaaS platform'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // --- SPRING BOOT STARTERS ---
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // --- DATABASE & MIGRATION ---

    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'org.postgresql:postgresql'

    // --- OPENAPI / SWAGGER ---
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // --- AWS SDK v2 (S3 + Presigner) ---
    implementation platform('software.amazon.awssdk:bom:2.25.66')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:auth'
    implementation 'software.amazon.awssdk:regions'
    implementation 'software.amazon.awssdk:url-connection-client'

    // --- JWT AUTHENTICATION ---
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // --- CACHE & REDIS (Future-proof for session/cache) ---
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // --- LOMBOK ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // --- TESTING ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

bootJar {
    archiveFileName = 'commerce-api.jar'
    launchScript()
}

jar {
    enabled = false
}

springBoot {
    buildInfo()
}
